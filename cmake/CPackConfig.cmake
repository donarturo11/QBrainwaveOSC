message("CMAKE_BINARY_DIR=${CMAKE_BINARY_DIR}")
message("CMAKE_SOURCE_DIR=${CMAKE_SOURCE_DIR}")
message("CMAKE_INSTALL_PREFIX=${CMAKE_INSTALL_PREFIX}")
message("CMAKE_RUNTIME_OUTPUT_DIRECTORY=${CMAKE_RUNTIME_OUTPUT_DIRECTORY}")
set(CPACK_PACKAGE_NAME ${PROJECT_NAME})
set(CPACK_PACKAGE_VENDOR donarturo11)
set(CPACK_PACKAGE_DESCRIPTION "Simple soft converting EEG waves to OSC")
#set(CPACK_PACKAGE_FILE_NAME ${PROJECT_NAME})
set(CPACK_PACKAGE_INSTALL_DIRECTORY ${PROJECT_NAME})
#set(CPACK_PACKAGE_ICON ${CMAKE_SOURCE_DIR}/desktop/AppIcon.ico)
#set(CPACK_SET_DESTDIR "ON")
set(CPACK_INSTALLED_DIRECTORIES "${CMAKE_RUNTIME_OUTPUT_DIRECTORY}/;/")
#set(CPACK_PACKAGING_INSTALL_PREFIX "")
if (APPLE)
    set(CPACK_GENERATOR DragNDrop)
    #set(CPACK_BUNDLE_NAME ${PROJECT_NAME})
    set(CPACK_BUNDLE_PLIST ${CMAKE_RUNTIME_OUTPUT_DIRECTORY}/${PROJECT_NAME}.app/Contents/Info.plist)
    set(CPACK_BUNDLE_ICON_FILE ${CMAKE_RUNTIME_OUTPUT_DIRECTORY}/${PROJECT_NAME}.app/Contents/Resources/AppIcon.icns)
    set(CPACK_BUNDLE_ICON ${CMAKE_RUNTIME_OUTPUT_DIRECTORY}/${PROJECT_NAME}.app/Contents/Resources/AppIcon.icns)
    set(CPACK_BUNDLE_APPLE_CERT_APP "donarturo11.github.io")
    set(CPACK_BUNDLE_APPLE_ENTITLEMENTS "${CMAKE_SOURCE_DIR}/desktop/entitlements.plist")
    set(CPACK_BUNDLE_APPLE_CODESIGN_PARAMETER "--verbose --strict --continue --timestamp --force --deep")
elseif(WIN32)
    set (CMAKE_INSTALL_SYSTEM_RUNTIME_LIBS_SKIP TRUE)
    include (InstallRequiredSystemLibraries)
    set(CPACK_GENERATOR 7Z NSIS)
    set(CPACK_RESOURCE_FILE_LICENSE "${CMAKE_SOURCE_DIR}/LICENSE")
    set(CPACK_RESOURCE_FILE_README "${CMAKE_SOURCE_DIR}/README.md")
    set(CPACK_PACKAGE_FILE_NAME "${PROJECT_NAME}")
    set(CPACK_ARCHIVE_FILE_NAME "${PROJECT_NAME}-Portable")
    set(CPACK_NSIS_FILE_NAME "${PROJECT_NAME}-setup")
    set(CPACK_NSIS_PACKAGE_NAME "${PROJECT_NAME}")
    set(CPACK_NSIS_DISPLAY_NAME "${PROJECT_NAME}")
    set(CPACK_NSIS_INSTALLED_ICON_NAME "AppIcon.ico")
    set(CPACK_NSIS_URL_INFO_ABOUT "https://github.com/donarturo11/${PACKAGE_NAME}")
    set(CPACK_NSIS_ADD_REMOVE ON)
    if(MINGW)
       set(CPACK_NSIS_EXECUTABLE $ENV{MSYSTEM_PREFIX}/bin/makensis.exe)
    endif()
    message("CPACK_NSIS_EXECUTABLE ${CPACK_NSIS_EXECUTABLE}")
    message("Here package will be created")
elseif(UNIX AND NOT APPLE)
    set(CPACK_GENERATOR TGZ)
endif()
include(CPack)
